C51 COMPILER V9.00   DECODING                                                              07/19/2014 20:22:33 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DECODING
OBJECT MODULE PLACED IN decoding.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE decoding.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #include <intrins.h>
   3          
   4          #define uchar unsigned char
   5          #define uint  unsigned int
   6          
   7          void delay(uchar x);            //x*0.14MS
   8          void delayms(int ms);
   9          
  10          sbit IRIN = P3^2;         //红外接收器数据线
  11          sbit LED1 = P3^5;
  12          sbit LED2 = P3^4;
  13          int IR_val;
  14          
  15          uchar receive_flag;
  16          
  17          uchar IRCOM[7];
  18          
  19          main()
  20          {
  21   1      //外部中断初始化
  22   1          INT0 = 1;
  23   1          IT0 = 1;                    //设置INT0的中断类型 (1:仅下降沿 0:上升沿和下降沿)
  24   1          EX0 = 1;                    //使能INT0中断
  25   1          EA = 1;
  26   1          
  27   1          IRIN=1;                    //I/O口初始化
  28   1                      
  29   1          delayms(10);                //延时
  30   1                      while(1)
  31   1                      {
  32   2                      if(receive_flag==1)     {
  33   3                      receive_flag=0;
  34   3                      switch(IRCOM[3])
  35   3                              {
  36   4                                      case 0x20:
  37   4                                              LED1=0;
  38   4                                              delayms(1000);
  39   4                                              LED1=1;
  40   4                                      break;
  41   4                                      case 0x1e:
  42   4                                              LED2=0;
  43   4                                              delayms(1000);
  44   4                                              LED2=1;
  45   4                                      break;
  46   4                                      default:
  47   4                                              LED1=1;
  48   4                                              LED2=1;
  49   4                                      break;
  50   4                              }
  51   3                      }
  52   2                      }
  53   1              
  54   1      } //end main
  55          /**********************************************************/
C51 COMPILER V9.00   DECODING                                                              07/19/2014 20:22:33 PAGE 2   

  56          void exint0() interrupt 0      //INT0中断入口
  57          {
  58   1        unsigned char j,k,N=0;
  59   1         EX0 = 0; 
  60   1               delay(15);
  61   1              
  62   1               if (IRIN==1)                         //确认IR信号出现
  63   1           { EX0 =1;
  64   2                 return;
  65   2                }
  66   1      
  67   1              while (!IRIN)                          
  68   1        {delay(1);}                          //等IR变为高电平，跳过9ms的前导低电平信号。
  69   1          
  70   1      
  71   1       for (j=0;j<4;j++)         //收集四组数据
  72   1       { 
  73   2        for (k=0;k<8;k++)        //每组数据有8位
  74   2        {
  75   3         while (IRIN)            //等 IR 变为低电平，跳过4.5ms的前导高电平信号。
  76   3           {delay(1);}
  77   3          while (!IRIN)          //等 IR 变为高电平
  78   3           {delay(1);}
  79   3           while (IRIN)           //计算IR高电平时长
  80   3            {
  81   4          delay(1);
  82   4          N++;           
  83   4          if (N>=30)
  84   4               { EX0=1;
  85   5               return;}                  //0.14ms计数过长自动离开。
  86   4            }                        //高电平计数完毕                
  87   3           IRCOM[j]=IRCOM[j] << 1;                  //数据最低位补“0”
  88   3           if (N>=8) {IRCOM[j] = IRCOM[j] | 0x01;}  //数据最低位补“1”
  89   3           N=0;
  90   3        }//end for k
  91   2       }//end for j
  92   1      
  93   1              if(IRCOM[0]!=0x80||IRCOM[1]!=0x0f||IRCOM[2]!=0x04)
  94   1              {       
  95   2                      IRCOM[3]=0x00;
  96   2                      EX0=1;
  97   2                      LED2=~LED2;
  98   2                      return;
  99   2                      }       
 100   1              receive_flag=1;
 101   1         
 102   1      //   if (IRCOM[2]!=~IRCOM[3])
 103   1      //   { EX0=1;
 104   1      //     return; }
 105   1      
 106   1      //   IRCOM[5]=IRCOM[2] & 0x0F;     //取键码的低四位
 107   1      //   IRCOM[6]=IRCOM[2] >> 4;       //右移4次，高四位变为低四位
 108   1      
 109   1      //////////////////////////
 110   1      //      LED=~LED;
 111   1      //L1602_char(2,10,IRCOM[5]);
 112   1      //L1602_char(2,9,IRCOM[6]);
 113   1           //beep();
 114   1               IR_val=IRCOM[5]+IRCOM[6]*16;
 115   1           EX0 = 1; 
 116   1      } 
 117          
C51 COMPILER V9.00   DECODING                                                              07/19/2014 20:22:33 PAGE 3   

 118          
 119          /**********************************************************/
 120          void delay(unsigned char x)    //x*0.14MS
 121          {
 122   1              for(;x>0;x--){
 123   2                      unsigned char i, j;
 124   2                      i = 2;
 125   2                      j = 159;
 126   2                      do
 127   2                      {
 128   3                              while (--j);
 129   3                      } 
 130   2                      while (--i);
 131   2              }
 132   1      }
 133          
 134          /**********************************************************/
 135          void delayms(int ms)
 136          {
 137   1              unsigned char i, j,time;
 138   1              for(time=ms;time>0;time--){
 139   2                      i = 12;
 140   2                      j = 169;
 141   2                      do
 142   2                      {
 143   3                              while (--j);
 144   3                      } while (--i);
 145   2              }
 146   1      }
 147          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    336    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
